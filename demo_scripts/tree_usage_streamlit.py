import io
import streamlit as st
from contextlib import redirect_stdout
from dejan import generate_ascii_tree

def get_ascii_tree():
    """
    Captures the ASCII tree generated by generate_ascii_tree() as a string.
    
    :return: A string containing the ASCII tree representation.
    """
    with io.StringIO() as buf, redirect_stdout(buf):
        generate_ascii_tree()  # Generate the ASCII tree
        output = buf.getvalue()  # Get the output from the buffer
    return output

def main():
    # Streamlit app title
    st.title("Directory ASCII Tree Generator")
    
    # Generate and display the ASCII tree
    st.header("Generated ASCII Tree")
    ascii_tree = get_ascii_tree()
    st.text(ascii_tree)
    
    # Download button to save the ASCII tree to a file
    st.header("Save ASCII Tree to File")
    filename = st.text_input("Enter filename:", "dirtree.txt")

    # Provide a download link
    st.download_button(
        label="Download ASCII Tree as Text File",
        data=ascii_tree,
        file_name=filename,
        mime="text/plain"
    )

if __name__ == "__main__":
    main()
